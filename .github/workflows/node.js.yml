# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x] # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
      working-directory: ./backend
    - run: npm run build --if-present
      working-directory: ./backend
    - run: npm test
      working-directory: ./backend

#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Setup Cloud SDK
#       uses: google-github-actions/setup-gcloud@v0.2.0
#       with:
#         project_id: ${{ env.PROJECT_ID }}
#         service_account_key: ${{ secrets.GCP_SA_KEY }}
#         export_default_credentials: true  # Set to true to authenticate the Cloud Run action

#     - name: Authorize Docker push
#       run: gcloud auth configure-docker

#     - name: Build and Push Container
#       run: |-
#         docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} example-app/
#         docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        
#     - name: Deploy to Cloud Run
#       id: deploy
#       uses: google-github-actions/deploy-cloudrun@v0.4.0
#       with:
#         service: ${{ env.SERVICE }}
#         image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
#         region: ${{ env.REGION }}

#     - name: Show Output
#       run: echo ${{ steps.deploy.outputs.url }}
